//--------------------------------------------------------
//Code generated by Papyrus Java
//--------------------------------------------------------

package Tema2_ISP_CTD;

/************************************************************/
/**
**
*/
public class DispVerificare extends Date_Rovinieta {
	/**
	 * 
	 */
	private static int nrRoviniete;
	/**
	 * 
	 */
	private Rovinieta[] rovinieta;
	/**
	 * 
	 */
	Evidenta evidenta;
	
	
	/**
	 * Constructori
	 */
	public DispVerificare() {
		nrRoviniete =0;
		rovinieta =null;
		evidenta =new Evidenta();
	}
	
	public DispVerificare(Rovinieta[] roviniete, int lungime) {
		nrRoviniete = lungime;
		if(roviniete != null) {
			for(int i=0; i<nrRoviniete; ++i)
				rovinieta[i] = roviniete[i];
		}
		evidenta =new Evidenta();
	}
	
	public DispVerificare(Rovinieta[] roviniete, int lungime, Evidenta evid) {
		nrRoviniete = lungime;
		if(roviniete != null) {
			for(int i=0; i<nrRoviniete; ++i)
				rovinieta[i] = roviniete[i];
		}
		evidenta =new Evidenta(evid);
	}
	
	/**
	 * Getteri si Setteri
	 */
	public Rovinieta getRovinieta(int i) 
	{
		return rovinieta[i];
	}
	
	public Rovinieta[] getRovinieta() 
	{
		return rovinieta;
	}

	public void setRovinieta(Rovinieta[] rovinieta, int lungime) 
	{
		rovinieta = new Rovinieta[lungime];
		nrRoviniete =0;
		
		for(int i=0; i < lungime; ++i) {
			this.rovinieta[i] = rovinieta[i];
			nrRoviniete = nrRoviniete +1;
		}
	}
	
	public int getNrRoviniete() {
		return nrRoviniete;
	}
	
	public Evidenta getEvidenta() {
		return evidenta;
	}
	
	public void setEvidenta(Evidenta evid) {
		
		int nr = evid.getNrRoviniete();
		evidenta.setNrRoviniete(nr);
		for(int i=0; i<nr; ++i) {
			Rovinieta temp = evid.getRovinieta(i);
			evidenta.setRovinieta(temp, i);
		}
		
	}

	/**
	 * Logica pentru Diagrama de activitati
	 */
	public boolean preluareDateRovinieta(String nrInmatriculare) {
		String serieSasiu = "";
		if(evidenta.rovinietaExista(nrInmatriculare, "inmatr")) 
			if(evidenta.getSerieSasiu(nrInmatriculare) != "nimic") {
				serieSasiu = evidenta.getSerieSasiu(nrInmatriculare);
				return true;
			}
			
		verificareRovinieta(nrInmatriculare, serieSasiu);
		return false;
	}
	
	/**
	 * 
	 */
	@Override
	public int verificareRovinieta(String nrInmatriculare, String serieSasiu) {
		
		Rovinieta temp = new Rovinieta(nrInmatriculare, serieSasiu);
		if(evidenta.rovinietaExista(serieSasiu, "sasiu")) {
			if(evidenta.rovinietaExpirata(serieSasiu) == false) {
				this.adaugaRovinieta(temp);
				return 1;
			} else {
				System.out.println("Rovinieta expirata! Inceperea procesului de alertare politie!");
				alertarePolitie(temp);
				return 2;}
		} 
		
		System.out.println("Rovinieta incorecta! Inceperea procesului de alertare politie!");
		return 3;
	}

	/**
	 * 
	 */
	public void alertarePolitie(Rovinieta rovinieta) {
		System.out.println("Politia a fost alertata pentru rovinieta cu datele:");
		rovinieta.afisareDate();
		System.out.println("Un agent al politiei va fi trimis catre dumneavoastra!");
	}

	/**
	 * Auxiliare
	 */
	public boolean adaugaRovinieta(Rovinieta rovinieta) 
	{
		
		if(nrRoviniete > 1) {
			
			nrRoviniete = nrRoviniete +1; 
			Rovinieta temp[] = new Rovinieta[nrRoviniete]; 
			
			for(int i=0; i<nrRoviniete-1; ++i)
				temp[i] = this.rovinieta[i];
			
			temp[nrRoviniete-1] = rovinieta;
			
			this.rovinieta = new Rovinieta[nrRoviniete];
			
			for(int i=0; i<nrRoviniete; ++i)
				this.rovinieta[i] = temp[i];
			return true;
		} 
		else if(nrRoviniete == 1)
		{
			nrRoviniete = nrRoviniete +1;
			Rovinieta temp = this.rovinieta[nrRoviniete-2];
			
			this.rovinieta = new Rovinieta[nrRoviniete]; //marit spatiul la 2
			this.rovinieta[nrRoviniete -2] = temp;       // pe 0 punem temp
			this.rovinieta[nrRoviniete -1] = rovinieta;  // pe 1 punem rovinieta pe care o vrem
			return true;
		} 
		else if(nrRoviniete == 0){
			nrRoviniete = nrRoviniete +1;
			this.rovinieta = new Rovinieta[nrRoviniete]; //aloc 1 spatiu
			this.rovinieta[nrRoviniete-1] = rovinieta;   // pun pe pozitia 1-1=0 pe rovinieta
			return true;
		} 
		else return false;
		
	}
	
	public boolean scoateRovinieta(Rovinieta rovinieta) {
		boolean ok=false;
		for(int i=0; i<nrRoviniete; ++i) {
			if(ok) {
				this.rovinieta[i-1] = this.rovinieta[i];
			}
			if(this.rovinieta[i] == rovinieta)
				ok=true;
		}
		if(ok) {
			nrRoviniete = nrRoviniete -1;
			return true;
		}
		else return false;
	}
	
	public boolean scoateRovinieta(int numar) {
		if(numar < nrRoviniete) {
			for(int i=numar+1; i<nrRoviniete; ++i) {
				this.rovinieta[i-1] = this.rovinieta[i];
			}
			return true;
		}
		else return false;
	}

	public void listaRoviniete() {
		
		if(nrRoviniete == 0)
	 		return;
		
		for(int i=0; i<nrRoviniete; ++i)
			rovinieta[i].afisareDate();
	}
};

